!function(t){var r={};function e(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=r,e.d=function(t,r,n){e.o(t,r)||Object.defineProperty(t,r,{configurable:!1,enumerable:!0,get:n})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,"a",r),r},e.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},e.p="",e(e.s=1)}([function(t,r){var e=t.exports={};function n(t){return(t%360+360)%360}function o(t,r,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?t+6*(r-t)*e:e<.5?r:e<2/3?t+(r-t)*(2/3-e)*6:t}e.rgb2Hsl=function(t,r,e){if("object"==typeof t){const n=t;t=n.r,r=n.g,e=n.b}t=255===t?1:t%255/parseFloat(255),r=255===r?1:r%255/parseFloat(255),e=255===e?1:e%255/parseFloat(255);var n,o,a=Math.max(t,r,e),s=Math.min(t,r,e),i=(a+s)/2;if(a===s)n=o=0;else{var h=a-s;switch(o=i>.5?h/(2-a-s):h/(a+s),a){case t:n=(r-e)/h+(r<e?6:0);break;case r:n=(e-t)/h+2;break;case e:n=(t-r)/h+4}n/=6}return{h:Math.round(360*n),s:Math.round(100*o),l:Math.round(100*i)}},e.rgb_to_hsl=e.rgbToHsl=e.rgb2Hsl,e.rgb2Hsv=function(t,r,e){if("object"==typeof t){const n=t;t=n.r,r=n.g,e=n.b}t=255===t?1:t%255/parseFloat(255),r=255===r?1:r%255/parseFloat(255),e=255===e?1:e%255/parseFloat(255);var n,o,a=Math.max(t,r,e),s=Math.min(t,r,e),i=a,h=a-s;if(o=0===a?0:h/a,a===s)n=0;else{switch(a){case t:n=(r-e)/h+(r<e?6:0);break;case r:n=(e-t)/h+2;break;case e:n=(t-r)/h+4}n/=6}return{h:Math.round(360*n),s:Math.round(100*o),v:Math.round(100*i)}},e.rgb_to_hsv=e.rgbToHsv=e.rgb2Hsv,e.hsl2Rgb=function(t,r,e){if("object"==typeof t){const n=t;t=n.h,r=n.s,e=n.l}var a,s,i;if(t=360===(t=n(t))?1:t%360/parseFloat(360),r=100===r?1:r%100/parseFloat(100),e=100===e?1:e%100/parseFloat(100),0===r)a=s=i=e;else{var h=e<.5?e*(1+r):e+r-e*r,c=2*e-h;a=o(c,h,t+1/3),s=o(c,h,t),i=o(c,h,t-1/3)}return{r:Math.round(255*a),g:Math.round(255*s),b:Math.round(255*i)}},e.hsl_to_rgb=e.hslToRgb=e.hsl2Rgb,e.hsv2Rgb=function(t,r,e){if("object"==typeof t){const n=t;t=n.h,r=n.s,e=n.v}t=360===(t=n(t))?1:t%360/parseFloat(360)*6,r=100===r?1:r%100/parseFloat(100),e=100===e?1:e%100/parseFloat(100);var o=Math.floor(t),a=t-o,s=e*(1-r),i=e*(1-a*r),h=e*(1-(1-a)*r),c=o%6,u=[e,i,s,s,h,e][c],b=[h,e,e,i,s,s][c],f=[s,s,h,e,e,i][c];return{r:Math.floor(255*u),g:Math.floor(255*b),b:Math.floor(255*f)}},e.hsv_to_rgb=e.hsv2Rgb,e.hsvToRgb=e.hsv2Rgb,e.rgb2Hex=function(t,r,e){if("object"==typeof t){const n=t;t=n.r,r=n.g,e=n.b}return t=Math.round(t).toString(16),r=Math.round(r).toString(16),e=Math.round(e).toString(16),"#"+(t=1===t.length?"0"+t:t)+(r=1===r.length?"0"+r:r)+(e=1===e.length?"0"+e:e)},e.rgb_to_hex=e.rgbToHex=e.rgb2Hex,e.hex2Rgb=function(t){var r=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return r?{r:parseInt(r[1],16),g:parseInt(r[2],16),b:parseInt(r[3],16)}:null},e.hex_to_rgb=e.hexToRgb=e.hex2Rgb,e.hsv2Hex=function(t,r,n){var o=e.hsv2Rgb(t,r,n);return e.rgb2Hex(o.r,o.g,o.b)},e.hsv_to_hex=e.hsv2Hex,e.hsvToHex=e.hsv2Hex,e.hex2Hsv=function(t){var r=e.hex2Rgb(t);return e.rgb2Hsv(r.r,r.g,r.b)},e.hex_to_hsv=e.hexToHsv=e.hex2Hsv,e.hsl2Hex=function(t,r,n){var o=e.hsl2Rgb(t,r,n);return e.rgb2Hex(o.r,o.g,o.b)},e.hsl_to_hex=e.hslToHex=e.hsl2Hex,e.hex2Hsl=function(t){var r=e.hex2Rgb(t);return e.rgb2Hsl(r.r,r.g,r.b)},e.hex_to_hsl=e.hexToHsl=e.hex2Hsl,e.rgb2Cmyk=function(t,r,e){if("object"==typeof t){const n=t;t=n.r,r=n.g,e=n.b}var n=t/255,o=r/255,a=e/255,s=1-Math.max(n,o,a),i=(1-o-s)/(1-s),h=(1-a-s)/(1-s);return{c:((1-n-s)/(1-s)).toFixed(3),m:i.toFixed(3),y:h.toFixed(3),k:s.toFixed(3)}},e.rgb_to_cmyk=e.rgbToCmyk=e.rgb2Cmyk,e.cmyk2Rgb=function(t,r,e,n){if("object"==typeof t){const o=t;t=o.c,r=o.m,e=o.y,n=o.k}var o=255*(1-t)*(1-n),a=255*(1-r)*(1-n),s=255*(1-e)*(1-n);return{r:Math.floor(o),g:Math.floor(a),b:Math.floor(s)}},e.cmyk_to_rgb=e.cmykToRgb=e.cmyk2Rgb,e.hsv2Hsl=function(t,r,e){if("object"==typeof t){const n=t;t=n.h,r=n.s,e=n.v}var n=(2-r)*e/2;return 0!==n&&(r=100===n?0:n<50?r*e/(2*n):r*e/(2-2*n)),{h:t,s:r,l:n}},e.hsv_to_hsl=e.hsvToHsl=e.hsv2Hsl,e.hsl2Hsv=function(t,r,e){if("object"==typeof t){const n=t;t=n.h,r=n.s,e=n.l}return r*=e<50?e:100-e,{h:t,s:Math.floor(2*r/(e+r)),v:Math.floor(e+r)}},e.hsl_to_hsv=e.hslToHsv=e.hsl2Hsv,e.parseCss=function(t){if(t.indexOf("#")>-1)return e.hex2Rgb(t);const r=t.split("(")[0],n=t.split("(")[1].split(")")[0].split(",");return r.split("").reduce(function(t,r,e){const o=t;return o[r]=parseFloat(n[e]),o},{})},e.parse_css=e.parseCss,e.stringify=function(t){return Object.keys(t).join("")+"("+Object.keys(t).map(function(r){var e=t[r];return"s"!==r&&"v"!==r&&"l"!==r||(e+="%"),e}).join(", ")+")"},e.random=function(){return"#"+("000000"+Math.floor(16777215*Math.random()).toString(16)).substr(-6)},e.rotateHue=function(t,r){void 0===r&&(r=0);const e="object"==typeof t?(t.h+r)%360:(t+r)%360,n=e<0?360+e:e;return"object"==typeof t?Object.assign(t,{h:n}):n}},function(t,r,e){"use strict";var n=e(0),o=e(2),a=0,s=.2,i=[{beg:0,end:94},{beg:180,end:274}],h=47,c=10;function u(t,r){return r.reduce(function(r,e){return 0==r.distance?{distance:0,border:0}:e.beg<t.h&&e.end>t.h?{distance:0,border:0}:e.beg<t.h+360&&e.end>t.h+360?{distance:0,border:0}:function(){for(var t={distance:1e3,border:0},r=0;r<arguments.length;r++)t.distance>arguments[r].distance&&(t=arguments[r]);return t}({distance:Math.abs(t.h-e.beg),border:e.beg},{distance:Math.abs(t.h-e.end),border:e.end},{distance:Math.abs(t.h+360-e.beg),border:e.beg},{distance:Math.abs(t.h+360-e.end),border:e.end},{distance:r.distance,border:r.border})},{distance:1e3,border:0})}function b(t,r){return t.map(function(t){return{beg:t.beg+r,end:t.end+r}})}window.onload=function(){!function(){var t=document.getElementsByTagName("img")[0];t.crossOrigin="Anonymous",t.setAttribute("crossOrigin","");var r=document.getElementById("canvas"),e=r.getContext("2d");r.width=t.width,r.height=t.height,e.drawImage(t,0,0);for(var f,d=e.getImageData(0,0,r.width,r.height),g=d.data,l=[],v=0;v<g.length;v+=4)l.push(n.rgb_to_hsl({r:g[v],g:g[v+1],b:g[v+2]}));for(var p=i,m=1/0,x=0,M=0;M<=360;M+=c){p=b(i,M);var y=l.reduce(function(t,r){return t+u(r,p).distance},0);m>y&&(x=M),m=Math.min(m,y)}p=b(i,M),l=l.map(function(t){var r=u(t,p);return t.distance=r.distance,t.border=r.border,t},0),console.log(x);var _=function(t,r,e){var n=t;return n=n.map(function(t){var r;if(0!=t.distance)return Math.abs(t.h-t.border)<Math.abs(t.h+360-t.border)?r=t:(r=t).h+=360,r.h>r.border?(r.h=r.border-h+h*(1-o(a,s).pdf(r.h-r.border)),console.log(r.border-h+h*(1-o(a,s).pdf(r.h-r.border)))):(r.h=r.border+h-h*(1-o(a,s).pdf(r.border-r.h)),console.log(r.h=r.border+h-h*(1-o(a,s).pdf(r.border-r.h)))),r})}(l);!function(){for(var t=0;t<g.length;t+=4)f=n.hslToRgb({h:_[t].h,s:_[t+1].s,l:_[t+2].l}),g[t]=f.r,g[t+1]=f.g,g[t+2]=f.b;e.putImageData(d,0,0)}()}()}},function(t,r,e){!function(t){var r=function(t){var r=Math.abs(t),e=1/(1+r/2),n=e*Math.exp(-r*r-1.26551223+e*(1.00002368+e*(.37409196+e*(.09678418+e*(e*(.27886807+e*(e*(1.48851587+e*(.17087277*e-.82215223))-1.13520398))-.18628806)))));return t>=0?n:2-n},e=function(t,r){if(r<=0)throw new Error("Variance must be > 0 (but was "+r+")");this.mean=t,this.variance=r,this.standardDeviation=Math.sqrt(r)};e.prototype.pdf=function(t){var r=this.standardDeviation*Math.sqrt(2*Math.PI);return Math.exp(-Math.pow(t-this.mean,2)/(2*this.variance))/r},e.prototype.cdf=function(t){return.5*r(-(t-this.mean)/(this.standardDeviation*Math.sqrt(2)))},e.prototype.ppf=function(t){return this.mean-this.standardDeviation*Math.sqrt(2)*function(t){if(t>=2)return-100;if(t<=0)return 100;for(var e=t<1?t:2-t,n=Math.sqrt(-2*Math.log(e/2)),o=-.70711*((2.30753+.27061*n)/(1+n*(.99229+.04481*n))-n),a=0;a<2;a++){var s=r(o)-e;o+=s/(1.1283791670955126*Math.exp(-o*o)-o*s)}return t<1?o:-o}(2*t)},e.prototype.mul=function(t){if("number"==typeof t)return this.scale(t);var r=1/this.variance,e=1/t.variance;return o(r+e,r*this.mean+e*t.mean)},e.prototype.div=function(t){if("number"==typeof t)return this.scale(1/t);var r=1/this.variance,e=1/t.variance;return o(r-e,r*this.mean-e*t.mean)},e.prototype.add=function(t){return n(this.mean+t.mean,this.variance+t.variance)},e.prototype.sub=function(t){return n(this.mean-t.mean,this.variance+t.variance)},e.prototype.scale=function(t){return n(this.mean*t,this.variance*t*t)};var n=function(t,r){return new e(t,r)},o=function(t,r){return n(r/t,1/t)};t(n)}(function(r){t.exports=r})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvbG9yc3lzL2NvbG9yc3lzLmpzIiwid2VicGFjazovLy8uL2pzL21haW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2dhdXNzaWFuL2xpYi9nYXVzc2lhbi5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJ2YWx1ZSIsIm4iLCJfX2VzTW9kdWxlIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiY29sb3JzeXMiLCJfbm9ybWFsaXplQW5nbGUiLCJkZWdyZWVzIiwiX2h1ZTJSZ2IiLCJxIiwidCIsInJnYjJIc2wiLCJnIiwiYiIsImFyZ3MiLCJwYXJzZUZsb2F0IiwiaCIsIm1heCIsIk1hdGgiLCJtaW4iLCJyb3VuZCIsInJnYl90b19oc2wiLCJyZ2JUb0hzbCIsInJnYjJIc3YiLCJ2IiwicmdiX3RvX2hzdiIsInJnYlRvSHN2IiwiaHNsMlJnYiIsImhzbF90b19yZ2IiLCJoc2xUb1JnYiIsImhzdjJSZ2IiLCJmbG9vciIsImYiLCJtb2QiLCJoc3ZfdG9fcmdiIiwiaHN2VG9SZ2IiLCJyZ2IySGV4IiwidG9TdHJpbmciLCJsZW5ndGgiLCJyZ2JfdG9faGV4IiwicmdiVG9IZXgiLCJoZXgyUmdiIiwiaGV4IiwicmVzdWx0IiwiZXhlYyIsInBhcnNlSW50IiwiaGV4X3RvX3JnYiIsImhleFRvUmdiIiwiaHN2MkhleCIsInJnYiIsImhzdl90b19oZXgiLCJoc3ZUb0hleCIsImhleDJIc3YiLCJoZXhfdG9faHN2IiwiaGV4VG9Ic3YiLCJoc2wySGV4IiwiaHNsX3RvX2hleCIsImhzbFRvSGV4IiwiaGV4MkhzbCIsImhleF90b19oc2wiLCJoZXhUb0hzbCIsInJnYjJDbXlrIiwicnByaW0iLCJncHJpbSIsImJwcmltIiwiayIsInkiLCJ0b0ZpeGVkIiwicmdiX3RvX2NteWsiLCJyZ2JUb0NteWsiLCJjbXlrMlJnYiIsImNteWtfdG9fcmdiIiwiY215a1RvUmdiIiwiaHN2MkhzbCIsIlNWX01BWCIsImhzdl90b19oc2wiLCJoc3ZUb0hzbCIsImhzbDJIc3YiLCJoc2xfdG9faHN2IiwiaHNsVG9Ic3YiLCJwYXJzZUNzcyIsImNzc1N0cmluZyIsImluZGV4T2YiLCJwcmVmaXgiLCJzcGxpdCIsInJlZHVjZSIsImNvbG9yIiwicGFyYW0iLCJpZHgiLCJuZXh0Q29sb3IiLCJwYXJzZV9jc3MiLCJzdHJpbmdpZnkiLCJvYmoiLCJrZXlzIiwiam9pbiIsIm1hcCIsImtleSIsInZhbCIsInJhbmRvbSIsInN1YnN0ciIsInJvdGF0ZUh1ZSIsImh1ZSIsImFtb3VudCIsImF1eCIsIm5leHRIdWUiLCJhc3NpZ24iLCJnYXVzc2lhbiIsImdhdXNNZWFuIiwiZ2F1c1ZhcmlhbmNlIiwidGVtcGxhdGVfYmFzZTEiLCJiZWciLCJlbmQiLCJ0ZW1wbGF0ZV9iYXNlMV9oYWxmd2lkdGgiLCJhbmdsZVN0ZXAiLCJtaW5Cb3JkZXJEaXN0YW5jZSIsInBpeGVsIiwidGVtcGxhdGUiLCJpbmYiLCJzZWN0aW9uIiwiZGlzdGFuY2UiLCJib3JkZXIiLCJtaW5EaXN0YW5jZSIsImFyZ3VtZW50cyIsImRpc3RhbmNlTWluIiwiYWJzIiwidGVtcGxhdGVSb3RhdGUiLCJ0ZW1wbGF0ZV9iYXNlIiwiYW5nbGUiLCJ3aW5kb3ciLCJvbmxvYWQiLCJpbWciLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiY3Jvc3NPcmlnaW4iLCJzZXRBdHRyaWJ1dGUiLCJjYW52YXMiLCJnZXRFbGVtZW50QnlJZCIsImN0eCIsImdldENvbnRleHQiLCJ3aWR0aCIsImhlaWdodCIsImRyYXdJbWFnZSIsInRlbXBSR0IiLCJpbWFnZURhdGEiLCJnZXRJbWFnZURhdGEiLCJkYXRhIiwiZGF0YUhTTCIsInB1c2giLCJtaW5TdW1EaXN0YW5jZSIsIkluZmluaXR5IiwiYmVzdEFuZ2xlIiwic3VtIiwiY29uc29sZSIsImxvZyIsIm5ld2RhdGFIU0wiLCJuZXdEYXRhSFNMIiwidHJ1ZVBpeGVsIiwicGRmIiwiZ2V0TmV3ZGF0YUhTTCIsInB1dEltYWdlRGF0YSIsImFwcGx5Q29sb3IiLCJkcmF3IiwiZXJmYyIsIngiLCJ6IiwiZXhwIiwiR2F1c3NpYW4iLCJtZWFuIiwidmFyaWFuY2UiLCJFcnJvciIsInRoaXMiLCJzdGFuZGFyZERldmlhdGlvbiIsInNxcnQiLCJQSSIsInBvdyIsImNkZiIsInBwZiIsInh4IiwiaiIsImVyciIsImllcmZjIiwibXVsIiwic2NhbGUiLCJwcmVjaXNpb24iLCJkcHJlY2lzaW9uIiwiZnJvbVByZWNpc2lvbk1lYW4iLCJkaXYiLCJhZGQiLCJzdWIiLCJwcmVjaXNpb25tZWFuIiwiZSJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsS0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxJQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFlBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEdBQ0FLLGNBQUEsRUFDQUMsWUFBQSxFQUNBQyxJQUFBTixLQU1BWixFQUFBbUIsRUFBQSxTQUFBakIsR0FD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Z0UsS0FBQUgsS0FBQXJMLEVBQUFxTCxLQUFBRyxLQUFBRixTQUFBdEwsRUFBQXNMLFdBSUFGLEVBQUFySyxVQUFBcUwsTUFBQSxTQUFBck0sR0FDQSxPQUFBeUgsRUFBQWdFLEtBQUFILEtBQUF0TCxFQUFBeUwsS0FBQUYsU0FBQXZMLE1BR0EsSUFBQXlILEVBQUEsU0FBQTZELEVBQUFDLEdBQ0EsV0FBQUYsRUFBQUMsRUFBQUMsSUFHQWlCLEVBQUEsU0FBQUYsRUFBQU0sR0FDQSxPQUFBbkYsRUFBQW1GLEVBQUFOLEVBQUEsRUFBQUEsSUFHQTdNLEVBQUFnSSxHQTVHQSxDQStHQSxTQUFBb0YsR0FBbUJuTixFQUFBRCxRQUFBb04iLCJmaWxlIjoiLi9idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDEpO1xuIiwiXG5jb25zdCBSR0JfTUFYID0gMjU1XG5jb25zdCBIVUVfTUFYID0gMzYwXG5jb25zdCBTVl9NQVggPSAxMDBcblxudmFyIGNvbG9yc3lzID0gbW9kdWxlLmV4cG9ydHMgPSB7fVxuXG5jb2xvcnN5cy5yZ2IySHNsID0gZnVuY3Rpb24gKHIsIGcsIGIpIHtcbiAgaWYgKHR5cGVvZiByID09PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IGFyZ3MgPSByXG4gICAgciA9IGFyZ3MucjsgZyA9IGFyZ3MuZzsgYiA9IGFyZ3MuYjtcbiAgfVxuICAvLyBJdCBjb252ZXJ0cyBbMCwyNTVdIGZvcm1hdCwgdG8gWzAsMV1cbiAgciA9IChyID09PSBSR0JfTUFYKSA/IDEgOiAociAlIFJHQl9NQVggLyBwYXJzZUZsb2F0KFJHQl9NQVgpKVxuICBnID0gKGcgPT09IFJHQl9NQVgpID8gMSA6IChnICUgUkdCX01BWCAvIHBhcnNlRmxvYXQoUkdCX01BWCkpXG4gIGIgPSAoYiA9PT0gUkdCX01BWCkgPyAxIDogKGIgJSBSR0JfTUFYIC8gcGFyc2VGbG9hdChSR0JfTUFYKSlcblxuICB2YXIgbWF4ID0gTWF0aC5tYXgociwgZywgYilcbiAgdmFyIG1pbiA9IE1hdGgubWluKHIsIGcsIGIpXG4gIHZhciBoLCBzLCBsID0gKG1heCArIG1pbikgLyAyXG5cbiAgaWYgKG1heCA9PT0gbWluKSB7XG4gICAgaCA9IHMgPSAwIC8vIGFjaHJvbWF0aWNcbiAgfSBlbHNlIHtcbiAgICB2YXIgZCA9IG1heCAtIG1pblxuICAgIHMgPSBsID4gMC41ID8gZCAvICgyIC0gbWF4IC0gbWluKSA6IGQgLyAobWF4ICsgbWluKVxuICAgIHN3aXRjaCAobWF4KSB7XG4gICAgICBjYXNlIHI6XG4gICAgICAgIGggPSAoZyAtIGIpIC8gZCArIChnIDwgYiA/IDYgOiAwKVxuICAgICAgICBicmVha1xuICAgICAgY2FzZSBnOlxuICAgICAgICBoID0gKGIgLSByKSAvIGQgKyAyXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlIGI6XG4gICAgICAgIGggPSAociAtIGcpIC8gZCArIDRcbiAgICAgICAgYnJlYWtcbiAgICB9XG4gICAgaCAvPSA2XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGg6IE1hdGgucm91bmQoaCAqIEhVRV9NQVgpLFxuICAgIHM6IE1hdGgucm91bmQocyAqIFNWX01BWCksXG4gICAgbDogTWF0aC5yb3VuZChsICogU1ZfTUFYKVxuICB9XG59XG5cbmNvbG9yc3lzLnJnYl90b19oc2wgPSBjb2xvcnN5cy5yZ2JUb0hzbCA9IGNvbG9yc3lzLnJnYjJIc2xcblxuY29sb3JzeXMucmdiMkhzdiA9IGZ1bmN0aW9uIChyLCBnLCBiKSB7XG4gIGlmICh0eXBlb2YgciA9PT0gJ29iamVjdCcpIHtcbiAgICBjb25zdCBhcmdzID0gclxuICAgIHIgPSBhcmdzLnI7IGcgPSBhcmdzLmc7IGIgPSBhcmdzLmI7XG4gIH1cblxuICAvLyBJdCBjb252ZXJ0cyBbMCwyNTVdIGZvcm1hdCwgdG8gWzAsMV1cbiAgciA9IChyID09PSBSR0JfTUFYKSA/IDEgOiAociAlIFJHQl9NQVggLyBwYXJzZUZsb2F0KFJHQl9NQVgpKVxuICBnID0gKGcgPT09IFJHQl9NQVgpID8gMSA6IChnICUgUkdCX01BWCAvIHBhcnNlRmxvYXQoUkdCX01BWCkpXG4gIGIgPSAoYiA9PT0gUkdCX01BWCkgPyAxIDogKGIgJSBSR0JfTUFYIC8gcGFyc2VGbG9hdChSR0JfTUFYKSlcblxuICB2YXIgbWF4ID0gTWF0aC5tYXgociwgZywgYilcbiAgdmFyIG1pbiA9IE1hdGgubWluKHIsIGcsIGIpXG4gIHZhciBoLCBzLCB2ID0gbWF4XG5cbiAgdmFyIGQgPSBtYXggLSBtaW5cblxuICBzID0gbWF4ID09PSAwID8gMCA6IGQgLyBtYXhcblxuICBpZiAobWF4ID09PSBtaW4pIHtcbiAgICBoID0gMCAvLyBhY2hyb21hdGljXG4gIH0gZWxzZSB7XG4gICAgc3dpdGNoIChtYXgpIHtcbiAgICAgIGNhc2UgcjpcbiAgICAgICAgaCA9IChnIC0gYikgLyBkICsgKGcgPCBiID8gNiA6IDApXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlIGc6XG4gICAgICAgIGggPSAoYiAtIHIpIC8gZCArIDJcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgYjpcbiAgICAgICAgaCA9IChyIC0gZykgLyBkICsgNFxuICAgICAgICBicmVha1xuICAgIH1cbiAgICBoIC89IDZcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaDogTWF0aC5yb3VuZChoICogSFVFX01BWCksXG4gICAgczogTWF0aC5yb3VuZChzICogU1ZfTUFYKSxcbiAgICB2OiBNYXRoLnJvdW5kKHYgKiBTVl9NQVgpXG4gIH1cbn1cblxuY29sb3JzeXMucmdiX3RvX2hzdiA9IGNvbG9yc3lzLnJnYlRvSHN2ID0gY29sb3JzeXMucmdiMkhzdlxuXG5jb2xvcnN5cy5oc2wyUmdiID0gZnVuY3Rpb24gKGgsIHMsIGwpIHtcbiAgaWYgKHR5cGVvZiBoID09PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IGFyZ3MgPSBoXG4gICAgaCA9IGFyZ3MuaDsgcyA9IGFyZ3MuczsgbCA9IGFyZ3MubDtcbiAgfVxuXG4gIHZhciByLCBnLCBiXG5cbiAgaCA9IF9ub3JtYWxpemVBbmdsZShoKVxuICBoID0gKGggPT09IEhVRV9NQVgpID8gMSA6IChoICUgSFVFX01BWCAvIHBhcnNlRmxvYXQoSFVFX01BWCkpXG4gIHMgPSAocyA9PT0gU1ZfTUFYKSA/IDEgOiAocyAlIFNWX01BWCAvIHBhcnNlRmxvYXQoU1ZfTUFYKSlcbiAgbCA9IChsID09PSBTVl9NQVgpID8gMSA6IChsICUgU1ZfTUFYIC8gcGFyc2VGbG9hdChTVl9NQVgpKVxuXG4gIGlmIChzID09PSAwKSB7XG4gICAgciA9IGcgPSBiID0gbCAvLyBhY2hyb21hdGljXG4gIH0gZWxzZSB7XG4gICAgdmFyIHEgPSBsIDwgMC41ID8gbCAqICgxICsgcykgOiBsICsgcyAtIGwgKiBzO1xuICAgIHZhciBwID0gMiAqIGwgLSBxO1xuICAgIHIgPSBfaHVlMlJnYihwLCBxLCBoICsgMSAvIDMpXG4gICAgZyA9IF9odWUyUmdiKHAsIHEsIGgpXG4gICAgYiA9IF9odWUyUmdiKHAsIHEsIGggLSAxIC8gMylcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcjogTWF0aC5yb3VuZChyICogUkdCX01BWCksXG4gICAgZzogTWF0aC5yb3VuZChnICogUkdCX01BWCksXG4gICAgYjogTWF0aC5yb3VuZChiICogUkdCX01BWCksXG4gIH1cbn1cblxuY29sb3JzeXMuaHNsX3RvX3JnYiA9IGNvbG9yc3lzLmhzbFRvUmdiID0gY29sb3JzeXMuaHNsMlJnYlxuXG5jb2xvcnN5cy5oc3YyUmdiID0gZnVuY3Rpb24gKGgsIHMsIHYpIHtcbiAgaWYgKHR5cGVvZiBoID09PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IGFyZ3MgPSBoXG4gICAgaCA9IGFyZ3MuaDsgcyA9IGFyZ3MuczsgdiA9IGFyZ3MudjtcbiAgfVxuXG4gIGggPSBfbm9ybWFsaXplQW5nbGUoaClcbiAgaCA9IChoID09PSBIVUVfTUFYKSA/IDEgOiAoaCAlIEhVRV9NQVggLyBwYXJzZUZsb2F0KEhVRV9NQVgpICogNilcbiAgcyA9IChzID09PSBTVl9NQVgpID8gMSA6IChzICUgU1ZfTUFYIC8gcGFyc2VGbG9hdChTVl9NQVgpKVxuICB2ID0gKHYgPT09IFNWX01BWCkgPyAxIDogKHYgJSBTVl9NQVggLyBwYXJzZUZsb2F0KFNWX01BWCkpXG5cbiAgdmFyIGkgPSBNYXRoLmZsb29yKGgpXG4gIHZhciBmID0gaCAtIGlcbiAgdmFyIHAgPSB2ICogKDEgLSBzKVxuICB2YXIgcSA9IHYgKiAoMSAtIGYgKiBzKVxuICB2YXIgdCA9IHYgKiAoMSAtICgxIC0gZikgKiBzKVxuICB2YXIgbW9kID0gaSAlIDZcbiAgdmFyIHIgPSBbdiwgcSwgcCwgcCwgdCwgdl1bbW9kXVxuICB2YXIgZyA9IFt0LCB2LCB2LCBxLCBwLCBwXVttb2RdXG4gIHZhciBiID0gW3AsIHAsIHQsIHYsIHYsIHFdW21vZF1cblxuICByZXR1cm4ge1xuICAgIHI6IE1hdGguZmxvb3IociAqIFJHQl9NQVgpLFxuICAgIGc6IE1hdGguZmxvb3IoZyAqIFJHQl9NQVgpLFxuICAgIGI6IE1hdGguZmxvb3IoYiAqIFJHQl9NQVgpLFxuICB9XG59XG5cbmNvbG9yc3lzLmhzdl90b19yZ2IgPSBjb2xvcnN5cy5oc3YyUmdiXG5jb2xvcnN5cy5oc3ZUb1JnYiA9IGNvbG9yc3lzLmhzdjJSZ2JcblxuY29sb3JzeXMucmdiMkhleCA9IGZ1bmN0aW9uIChyLCBnLCBiKSB7XG4gIGlmICh0eXBlb2YgciA9PT0gJ29iamVjdCcpIHtcbiAgICBjb25zdCBhcmdzID0gclxuICAgIHIgPSBhcmdzLnI7IGcgPSBhcmdzLmc7IGIgPSBhcmdzLmI7XG4gIH1cbiAgciA9IE1hdGgucm91bmQocikudG9TdHJpbmcoMTYpXG4gIGcgPSBNYXRoLnJvdW5kKGcpLnRvU3RyaW5nKDE2KVxuICBiID0gTWF0aC5yb3VuZChiKS50b1N0cmluZygxNilcblxuICByID0gci5sZW5ndGggPT09IDEgPyAnMCcgKyByIDogclxuICBnID0gZy5sZW5ndGggPT09IDEgPyAnMCcgKyBnIDogZ1xuICBiID0gYi5sZW5ndGggPT09IDEgPyAnMCcgKyBiIDogYlxuXG4gIHJldHVybiAnIycgKyByICsgZyArIGJcbn1cblxuY29sb3JzeXMucmdiX3RvX2hleCA9IGNvbG9yc3lzLnJnYlRvSGV4ID0gY29sb3JzeXMucmdiMkhleFxuXG5jb2xvcnN5cy5oZXgyUmdiID0gZnVuY3Rpb24gKGhleCkge1xuICB2YXIgcmVzdWx0ID0gL14jPyhbYS1mXFxkXXsyfSkoW2EtZlxcZF17Mn0pKFthLWZcXGRdezJ9KSQvaS5leGVjKGhleClcbiAgcmV0dXJuIHJlc3VsdCA/IHtcbiAgICByOiBwYXJzZUludChyZXN1bHRbMV0sIDE2KSxcbiAgICBnOiBwYXJzZUludChyZXN1bHRbMl0sIDE2KSxcbiAgICBiOiBwYXJzZUludChyZXN1bHRbM10sIDE2KVxuICB9IDogbnVsbFxufVxuXG5jb2xvcnN5cy5oZXhfdG9fcmdiID0gY29sb3JzeXMuaGV4VG9SZ2IgPSBjb2xvcnN5cy5oZXgyUmdiXG5cbmNvbG9yc3lzLmhzdjJIZXggPSBmdW5jdGlvbiAoaCwgcywgdikge1xuICB2YXIgcmdiID0gY29sb3JzeXMuaHN2MlJnYihoLCBzLCB2KVxuICByZXR1cm4gY29sb3JzeXMucmdiMkhleChyZ2IuciwgcmdiLmcsIHJnYi5iKVxufVxuXG5jb2xvcnN5cy5oc3ZfdG9faGV4ID0gY29sb3JzeXMuaHN2MkhleFxuY29sb3JzeXMuaHN2VG9IZXggPSBjb2xvcnN5cy5oc3YySGV4XG5cbmNvbG9yc3lzLmhleDJIc3YgPSBmdW5jdGlvbiAoaGV4KSB7XG4gIHZhciByZ2IgPSBjb2xvcnN5cy5oZXgyUmdiKGhleClcbiAgcmV0dXJuIGNvbG9yc3lzLnJnYjJIc3YocmdiLnIsIHJnYi5nLCByZ2IuYilcbn1cblxuY29sb3JzeXMuaGV4X3RvX2hzdiA9IGNvbG9yc3lzLmhleFRvSHN2ID0gY29sb3JzeXMuaGV4MkhzdlxuXG5jb2xvcnN5cy5oc2wySGV4ID0gZnVuY3Rpb24gKGgsIHMsIGwpIHtcbiAgdmFyIHJnYiA9IGNvbG9yc3lzLmhzbDJSZ2IoaCwgcywgbClcbiAgcmV0dXJuIGNvbG9yc3lzLnJnYjJIZXgocmdiLnIsIHJnYi5nLCByZ2IuYilcbn1cblxuY29sb3JzeXMuaHNsX3RvX2hleCA9IGNvbG9yc3lzLmhzbFRvSGV4ID0gY29sb3JzeXMuaHNsMkhleFxuXG5jb2xvcnN5cy5oZXgySHNsID0gZnVuY3Rpb24gKGhleCkge1xuICB2YXIgcmdiID0gY29sb3JzeXMuaGV4MlJnYihoZXgpXG4gIHJldHVybiBjb2xvcnN5cy5yZ2IySHNsKHJnYi5yLCByZ2IuZywgcmdiLmIpXG59XG5cbmNvbG9yc3lzLmhleF90b19oc2wgPSBjb2xvcnN5cy5oZXhUb0hzbCA9IGNvbG9yc3lzLmhleDJIc2xcblxuY29sb3JzeXMucmdiMkNteWsgPSBmdW5jdGlvbiAociwgZywgYikge1xuICBpZiAodHlwZW9mIHIgPT09ICdvYmplY3QnKSB7XG4gICAgY29uc3QgYXJncyA9IHJcbiAgICByID0gYXJncy5yOyBnID0gYXJncy5nOyBiID0gYXJncy5iO1xuICB9XG5cbiAgdmFyIHJwcmltID0gciAvIDI1NVxuICB2YXIgZ3ByaW0gPSBnIC8gMjU1XG4gIHZhciBicHJpbSA9IGIgLyAyNTVcblxuICB2YXIgayA9IDEgLSBNYXRoLm1heChycHJpbSwgZ3ByaW0sIGJwcmltKVxuXG4gIHZhciBjID0gKDEgLSBycHJpbSAtIGspIC8gKDEgLSBrKVxuICB2YXIgbSA9ICgxIC0gZ3ByaW0gLSBrKSAvICgxIC0gaylcbiAgdmFyIHkgPSAoMSAtIGJwcmltIC0gaykgLyAoMSAtIGspXG5cbiAgcmV0dXJuIHtcbiAgICBjOiBjLnRvRml4ZWQoMyksXG4gICAgbTogbS50b0ZpeGVkKDMpLFxuICAgIHk6IHkudG9GaXhlZCgzKSxcbiAgICBrOiBrLnRvRml4ZWQoMylcbiAgfVxufVxuXG5jb2xvcnN5cy5yZ2JfdG9fY215ayA9IGNvbG9yc3lzLnJnYlRvQ215ayA9IGNvbG9yc3lzLnJnYjJDbXlrXG5cbmNvbG9yc3lzLmNteWsyUmdiID0gZnVuY3Rpb24gKGMsIG0sIHksIGspIHtcbiAgaWYgKHR5cGVvZiBjID09PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IGFyZ3MgPSBjXG4gICAgYyA9IGFyZ3MuYzsgbSA9IGFyZ3MubTsgeSA9IGFyZ3MueTsgayA9IGFyZ3MuaztcbiAgfVxuXG4gIHZhciByID0gMjU1ICogKDEgLSBjKSAqICgxIC0gaylcbiAgdmFyIGcgPSAyNTUgKiAoMSAtIG0pICogKDEgLSBrKVxuICB2YXIgYiA9IDI1NSAqICgxIC0geSkgKiAoMSAtIGspXG5cbiAgcmV0dXJuIHtcbiAgICByOiBNYXRoLmZsb29yKHIpLFxuICAgIGc6IE1hdGguZmxvb3IoZyksXG4gICAgYjogTWF0aC5mbG9vcihiKVxuICB9XG59XG5cbmNvbG9yc3lzLmNteWtfdG9fcmdiID0gY29sb3JzeXMuY215a1RvUmdiID0gY29sb3JzeXMuY215azJSZ2JcblxuY29sb3JzeXMuaHN2MkhzbCA9IGZ1bmN0aW9uIChoLCBzLCB2KSB7XG4gIGlmICh0eXBlb2YgaCA9PT0gJ29iamVjdCcpIHtcbiAgICBjb25zdCBhcmdzID0gaFxuICAgIGggPSBhcmdzLmg7IHMgPSBhcmdzLnM7IHYgPSBhcmdzLnY7XG4gIH1cblxuICB2YXIgbCA9ICgyIC0gcykgKiB2IC8gMlxuXG4gIGlmIChsICE9PSAwKSB7XG4gICAgaWYgKGwgPT09IFNWX01BWCkge1xuICAgICAgcyA9IDBcbiAgICB9IGVsc2UgaWYgKGwgPCBTVl9NQVggLyAyKSB7XG4gICAgICBzID0gcyAqIHYgLyAobCAqIDIpXG4gICAgfSBlbHNlIHtcbiAgICAgIHMgPSBzICogdiAvICgyIC0gbCAqIDIpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHsgaDogaCwgczogcywgbDogbCB9XG59XG5cbmNvbG9yc3lzLmhzdl90b19oc2wgPSBjb2xvcnN5cy5oc3ZUb0hzbCA9IGNvbG9yc3lzLmhzdjJIc2xcblxuY29sb3JzeXMuaHNsMkhzdiA9IGZ1bmN0aW9uIChoLCBzLCBsKSB7XG4gIGlmICh0eXBlb2YgaCA9PT0gJ29iamVjdCcpIHtcbiAgICBjb25zdCBhcmdzID0gaFxuICAgIGggPSBhcmdzLmg7IHMgPSBhcmdzLnM7IGwgPSBhcmdzLmw7XG4gIH1cblxuICBzID0gcyAqIChsIDwgNTAgPyBsIDogKDEwMCAtIGwpKVxuXG4gIHJldHVybiB7XG4gICAgaDogaCxcbiAgICBzOiBNYXRoLmZsb29yKDIgKiBzIC8gKGwgKyBzKSksXG4gICAgdjogTWF0aC5mbG9vcihsICsgcyksXG4gIH1cbn1cblxuY29sb3JzeXMuaHNsX3RvX2hzdiA9IGNvbG9yc3lzLmhzbFRvSHN2ID0gY29sb3JzeXMuaHNsMkhzdlxuXG4vKipcbiogUGFyc2VzIHZhbHVlcyBmcm9tIGEgc3RyaW5nIGludG8gYSBqYXZhc2NyaXB0IG9iamVjdFxuKiBlLmc6IGhzbGEoMTQwLCAzMCUsIDQwJSwgLjUpID0+IHsgaDogMTQwLCBzOiAzMCwgbDogNDAsIGFscGhhOiAwLjV9XG4qL1xuY29sb3JzeXMucGFyc2VDc3MgPSBmdW5jdGlvbiAoY3NzU3RyaW5nKSB7XG4gIGlmIChjc3NTdHJpbmcuaW5kZXhPZignIycpID4gLTEpIHtcbiAgICByZXR1cm4gY29sb3JzeXMuaGV4MlJnYihjc3NTdHJpbmcpXG4gIH1cblxuICBjb25zdCBwcmVmaXggPSBjc3NTdHJpbmcuc3BsaXQoJygnKVswXVxuICBjb25zdCBhcmdzID0gY3NzU3RyaW5nLnNwbGl0KCcoJylbMV0uc3BsaXQoJyknKVswXS5zcGxpdCgnLCcpXG5cbiAgLy8gVXNlIHRoZSBwcmVmaXggYXMgYW4gYXJyYXkgW3IsIGcsIGIsIGFdIHRvIHBhcnNlIHRoZSBjb2xvdXJzXG4gIHJldHVybiBwcmVmaXguc3BsaXQoJycpLnJlZHVjZShmdW5jdGlvbiAoY29sb3IsIHBhcmFtLCBpZHgpIHtcbiAgICBjb25zdCBuZXh0Q29sb3IgPSBjb2xvclxuICAgIG5leHRDb2xvcltwYXJhbV0gPSBwYXJzZUZsb2F0KGFyZ3NbaWR4XSlcbiAgICByZXR1cm4gbmV4dENvbG9yXG4gIH0sIHt9KVxufVxuXG5jb2xvcnN5cy5wYXJzZV9jc3MgPSBjb2xvcnN5cy5wYXJzZUNzc1xuXG5jb2xvcnN5cy5zdHJpbmdpZnkgPSBmdW5jdGlvbiAob2JqKSB7XG4gIGNvbnN0IHByZWZpeCA9IE9iamVjdC5rZXlzKG9iaikuam9pbignJylcbiAgY29uc3QgdmFsdWVzID0gT2JqZWN0LmtleXMob2JqKS5tYXAoZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciB2YWwgPSBvYmpba2V5XVxuICAgIGlmIChrZXkgPT09ICdzJyB8fMKga2V5ID09PSAndicgfHwga2V5ID09PSAnbCcpIHtcbiAgICAgIHZhbCA9IHZhbCArICclJ1xuICAgIH1cbiAgICByZXR1cm4gdmFsXG4gIH0pXG4gIHJldHVybiBwcmVmaXggKyAnKCcgKyB2YWx1ZXMuam9pbignLCAnKSArICcpJ1xufVxuXG4vLyBXaWxsIHJldHVybiBhIHJhbmRvbSBoZXggY29sb3VyXG5jb2xvcnN5cy5yYW5kb20gPSBmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IGJhc2UgPSAnMDAwMDAwJ1xuICBjb25zdCBudW1iZXIgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxNjc3NzIxNSkudG9TdHJpbmcoMTYpXG4gIHJldHVybiAnIycgKyAoYmFzZSArIG51bWJlcikuc3Vic3RyKC02KVxufVxuXG5jb2xvcnN5cy5yb3RhdGVIdWUgPSBmdW5jdGlvbiAoaHVlLCBhbW91bnQpIHtcbiAgaWYgKGFtb3VudCA9PT0gdm9pZCAwKSB7IGFtb3VudCA9IDA7IH1cbiAgY29uc3QgYXV4ID0gdHlwZW9mIGh1ZSA9PT0gJ29iamVjdCdcbiAgICAgID8gKGh1ZS5oICsgYW1vdW50KSAlIDM2MFxuICAgICAgOiAoaHVlICsgYW1vdW50KSAlIDM2MFxuICAgICAgXG4gIGNvbnN0IG5leHRIdWUgPSBhdXggPCAwID8gKDM2MCArIGF1eCkgOiBhdXhcbiAgcmV0dXJuIHR5cGVvZiBodWUgPT09ICdvYmplY3QnXG4gICAgICA/IE9iamVjdC5hc3NpZ24oaHVlLCB7IGg6IG5leHRIdWUgfSlcbiAgICAgIDogbmV4dEh1ZVxufVxuXG5mdW5jdGlvbiBfbm9ybWFsaXplQW5nbGUgKGRlZ3JlZXMpIHtcbiAgcmV0dXJuIChkZWdyZWVzICUgMzYwICsgMzYwKSAlIDM2MDtcbn1cblxuZnVuY3Rpb24gX2h1ZTJSZ2IgKHAsIHEsIHQpIHtcbiAgaWYgKHQgPCAwKSB0ICs9IDFcbiAgaWYgKHQgPiAxKSB0IC09IDFcbiAgaWYgKHQgPCAxIC8gNikgcmV0dXJuIHAgKyAocSAtIHApICogNiAqIHRcbiAgaWYgKHQgPCAxIC8gMikgcmV0dXJuIHFcbiAgaWYgKHQgPCAyIC8gMykgcmV0dXJuIHAgKyAocSAtIHApICogKDIgLyAzIC0gdCkgKiA2XG4gIHJldHVybiBwXG59XG4iLCJ2YXIgY29sb3JzeXMgPSByZXF1aXJlKCdjb2xvcnN5cycpO1xyXG52YXIgZ2F1c3NpYW4gPSByZXF1aXJlKCdnYXVzc2lhbicpO1xyXG5cclxuY29uc3QgZ2F1c01lYW4gPSAwO1xyXG5jb25zdCBnYXVzVmFyaWFuY2UgPSAwLjI7XHJcbmNvbnN0IHRlbXBsYXRlX2Jhc2UxID0gW3tcclxuICAgIGJlZzogMCxcclxuICAgIGVuZDogOTRcclxufSwge1xyXG4gICAgYmVnOiAxODAsXHJcbiAgICBlbmQ6IDI3NFxyXG59XTtcclxuY29uc3QgdGVtcGxhdGVfYmFzZTFfaGFsZndpZHRoID0gNDc7XHJcbmNvbnN0IGFuZ2xlU3RlcCA9IDEwO1xyXG5cclxuLyogXHJcbiAgICByZXN1bHQgLTEgLSDQstC90YPRgtGA0Lgg0LPRgNCw0L3QuNGG0Ys7XHJcbiAgICByZXN1bHQgPj0wIC0g0LLQvdC1INCz0YDQsNC90LjRhtGLO1xyXG4qL1xyXG4vLyBmdW5jdGlvbiBtaW5Cb3JkZXJEaXN0YW5jZShwaXhlbCwgdGVtcGxhdGUpe1xyXG4vLyAgICAgcmV0dXJuIHRlbXBsYXRlLnJlZHVjZSgoZGlzdGFuY2UsIHNlY3Rpb24pPT57XHJcbi8vICAgICAgICAgLy/QtdGB0LvQuCDQv9C40LrRgdC10LvRjCDRg9C20LUg0LLQvdGD0YLRgNC4INCz0YDQsNC90LjRhiwg0YLQviDQv9GA0L7QtNC+0LvQttCw0LXQvCDQstC+0LfQstGA0LDRidCw0YLRjCAtMVxyXG4vLyAgICAgICAgIGlmIChkaXN0YW5jZSA9PSAwKSByZXR1cm4gMDtcclxuLy8gICAgICAgICAvL9C10YHQu9C4INC/0LjQutGB0LXQu9GMINGB0YLQsNC7INCy0L3Rg9GC0YDQuCDQs9GA0LDQvdC40YYsINC90LDRh9C40L3QsNC10Lwg0LLQvtC30LLRgNCw0YnQsNGC0YwgLTFcclxuLy8gICAgICAgICBpZiAoKHNlY3Rpb24uYmVnIDwgcGl4ZWwuaCkgJiYgKHNlY3Rpb24uZW5kID4gcGl4ZWwuaCkpe1xyXG4vLyAgICAgICAgICAgICByZXR1cm4gMDtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICAgICAgaWYgKChzZWN0aW9uLmJlZyA8IChwaXhlbC5oICsgMzYwKSkgJiYgKHNlY3Rpb24uZW5kID4gKHBpeGVsLmggKyAzNjApKSl7XHJcbi8vICAgICAgICAgICAgIHJldHVybiAwO1xyXG4vLyAgICAgICAgIH1cclxuLy8gICAgICAgICAvL9C40L3QsNGH0LUg0LLQvtC30LLRgNCw0YnQsNC10Lwg0LzQuNC90LjQvNCw0LvRjNC90L7QtSDQt9C90LDRh9C10L3QuNC1INC80LXQttC00YMg0LPRgNCw0L3QuNGG0LDQvNC4INC4INC/0YDQtdC00YvQtNGD0YnQuNC8INCy0YvRh9C40YHQu9C10L3QvdGL0Lwg0LfQvdCw0YfQtdC90LjQtdC8XHJcbi8vICAgICAgICAgcmV0dXJuIE1hdGgubWluKE1hdGguYWJzKHBpeGVsLmggLSBzZWN0aW9uLmJlZyksXHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIE1hdGguYWJzKHBpeGVsLmggLSBzZWN0aW9uLmVuZCksXHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIE1hdGguYWJzKChwaXhlbC5oICsgMzYwKSAtIHNlY3Rpb24uYmVnKSxcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgTWF0aC5hYnMoKHBpeGVsLmggKyAzNjApIC0gc2VjdGlvbi5lbmQpLFxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICBkaXN0YW5jZVxyXG4vLyAgICAgICAgICAgICAgICAgICAgICApO1xyXG4vLyAgICAgfSwgMTAwMCk7XHJcbi8vIH1cclxuZnVuY3Rpb24gZGlzdGFuY2VNaW4oKSB7XHJcbiAgICB2YXIgbWluRGlzdGFuY2UgPSB7XHJcbiAgICAgICAgXCJkaXN0YW5jZVwiOiAxMDAwLFxyXG4gICAgICAgIFwiYm9yZGVyXCI6IDBcclxuICAgIH07XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmIChtaW5EaXN0YW5jZS5kaXN0YW5jZSA+IGFyZ3VtZW50c1tpXS5kaXN0YW5jZSkge1xyXG4gICAgICAgICAgICBtaW5EaXN0YW5jZSA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG1pbkRpc3RhbmNlO1xyXG59XHJcblxyXG5mdW5jdGlvbiBtaW5Cb3JkZXJEaXN0YW5jZShwaXhlbCwgdGVtcGxhdGUpIHtcclxuICAgIHJldHVybiB0ZW1wbGF0ZS5yZWR1Y2UoKGluZiwgc2VjdGlvbikgPT4ge1xyXG4gICAgICAgIC8v0LXRgdC70Lgg0L/QuNC60YHQtdC70Ywg0YPQttC1INCy0L3Rg9GC0YDQuCDQs9GA0LDQvdC40YYsINGC0L4g0L/RgNC+0LTQvtC70LbQsNC10Lwg0LLQvtC30LLRgNCw0YnQsNGC0YwgLTFcclxuICAgICAgICBpZiAoaW5mLmRpc3RhbmNlID09IDApIHJldHVybiB7XHJcbiAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogMCxcclxuICAgICAgICAgICAgXCJib3JkZXJcIjogMFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgLy/QtdGB0LvQuCDQv9C40LrRgdC10LvRjCDRgdGC0LDQuyDQstC90YPRgtGA0Lgg0LPRgNCw0L3QuNGGLCDQvdCw0YfQuNC90LDQtdC8INCy0L7Qt9Cy0YDQsNGJ0LDRgtGMIC0xXHJcbiAgICAgICAgaWYgKChzZWN0aW9uLmJlZyA8IHBpeGVsLmgpICYmIChzZWN0aW9uLmVuZCA+IHBpeGVsLmgpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBcImRpc3RhbmNlXCI6IDAsXHJcbiAgICAgICAgICAgICAgICBcImJvcmRlclwiOiAwXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICgoc2VjdGlvbi5iZWcgPCAocGl4ZWwuaCArIDM2MCkpICYmIChzZWN0aW9uLmVuZCA+IChwaXhlbC5oICsgMzYwKSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogMCxcclxuICAgICAgICAgICAgICAgIFwiYm9yZGVyXCI6IDBcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy/QuNC90LDRh9C1INCy0L7Qt9Cy0YDQsNGJ0LDQtdC8INC80LjQvdC40LzQsNC70YzQvdC+0LUg0LfQvdCw0YfQtdC90LjQtSDQvNC10LbQtNGDINCz0YDQsNC90LjRhtCw0LzQuCDQuCDQv9GA0LXQtNGL0LTRg9GJ0LjQvCDQstGL0YfQuNGB0LvQtdC90L3Ri9C8INC30L3QsNGH0LXQvdC40LXQvFxyXG4gICAgICAgIHJldHVybiBkaXN0YW5jZU1pbih7XHJcbiAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogTWF0aC5hYnMocGl4ZWwuaCAtIHNlY3Rpb24uYmVnKSxcclxuICAgICAgICAgICAgXCJib3JkZXJcIjogc2VjdGlvbi5iZWdcclxuICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogTWF0aC5hYnMocGl4ZWwuaCAtIHNlY3Rpb24uZW5kKSxcclxuICAgICAgICAgICAgXCJib3JkZXJcIjogc2VjdGlvbi5lbmRcclxuICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogTWF0aC5hYnMoKHBpeGVsLmggKyAzNjApIC0gc2VjdGlvbi5iZWcpLFxyXG4gICAgICAgICAgICBcImJvcmRlclwiOiBzZWN0aW9uLmJlZ1xyXG4gICAgICAgIH0sIHtcclxuICAgICAgICAgICAgXCJkaXN0YW5jZVwiOiBNYXRoLmFicygocGl4ZWwuaCArIDM2MCkgLSBzZWN0aW9uLmVuZCksXHJcbiAgICAgICAgICAgIFwiYm9yZGVyXCI6IHNlY3Rpb24uZW5kXHJcbiAgICAgICAgfSwge1xyXG4gICAgICAgICAgICBcImRpc3RhbmNlXCI6IGluZi5kaXN0YW5jZSxcclxuICAgICAgICAgICAgXCJib3JkZXJcIjogaW5mLmJvcmRlclxyXG4gICAgICAgIH0pO1xyXG4gICAgfSwge1xyXG4gICAgICAgIFwiZGlzdGFuY2VcIjogMTAwMCxcclxuICAgICAgICBcImJvcmRlclwiOiAwXHJcbiAgICB9KVxyXG59XHJcblxyXG5mdW5jdGlvbiBnZXROZXdkYXRhSFNMKGRhdGFIU0wsIHRlbXBsYXRlLCBiZXN0QW5nbGUpIHtcclxuICAgIHZhciBuZXdEYXRhSFNMID0gZGF0YUhTTDtcclxuICAgIG5ld0RhdGFIU0wgPSBuZXdEYXRhSFNMLm1hcCgocGl4ZWwpID0+IHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKG1pbkJvcmRlckRpc3RhbmNlKHBpeGVsLCB0ZW1wbGF0ZSkuZGlzdGFuY2UpO1xyXG4gICAgICAgIGlmIChwaXhlbC5kaXN0YW5jZSAhPSAwKSB7XHJcbiAgICAgICAgICAgIHZhciB0cnVlUGl4ZWw7XHJcbiAgICAgICAgICAgIGlmIChNYXRoLmFicyhwaXhlbC5oIC0gcGl4ZWwuYm9yZGVyKSA8IE1hdGguYWJzKHBpeGVsLmggKyAzNjAgLSBwaXhlbC5ib3JkZXIpKSB7XHJcbiAgICAgICAgICAgICAgICB0cnVlUGl4ZWwgPSBwaXhlbDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRydWVQaXhlbCA9IHBpeGVsO1xyXG4gICAgICAgICAgICAgICAgdHJ1ZVBpeGVsLmggKz0gMzYwO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAodHJ1ZVBpeGVsLmggPiB0cnVlUGl4ZWwuYm9yZGVyKSB7XHJcbiAgICAgICAgICAgICAgICB0cnVlUGl4ZWwuaCA9ICh0cnVlUGl4ZWwuYm9yZGVyIC0gdGVtcGxhdGVfYmFzZTFfaGFsZndpZHRoKSArXHJcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVfYmFzZTFfaGFsZndpZHRoICogKDEgLSBnYXVzc2lhbihnYXVzTWVhbiwgZ2F1c1ZhcmlhbmNlKS5wZGYodHJ1ZVBpeGVsLmggLSB0cnVlUGl4ZWwuYm9yZGVyKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coKHRydWVQaXhlbC5ib3JkZXIgLSB0ZW1wbGF0ZV9iYXNlMV9oYWxmd2lkdGgpICsgdGVtcGxhdGVfYmFzZTFfaGFsZndpZHRoICogKDEgLSBnYXVzc2lhbihnYXVzTWVhbiwgZ2F1c1ZhcmlhbmNlKS5wZGYodHJ1ZVBpeGVsLmggLSB0cnVlUGl4ZWwuYm9yZGVyKSkpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdHJ1ZVBpeGVsLmggPSAodHJ1ZVBpeGVsLmJvcmRlciArIHRlbXBsYXRlX2Jhc2UxX2hhbGZ3aWR0aCkgLVxyXG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlX2Jhc2UxX2hhbGZ3aWR0aCAqICgxIC0gZ2F1c3NpYW4oZ2F1c01lYW4sIGdhdXNWYXJpYW5jZSkucGRmKHRydWVQaXhlbC5ib3JkZXIgLSB0cnVlUGl4ZWwuaCkpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codHJ1ZVBpeGVsLmggPSAodHJ1ZVBpeGVsLmJvcmRlciArIHRlbXBsYXRlX2Jhc2UxX2hhbGZ3aWR0aCkgLSB0ZW1wbGF0ZV9iYXNlMV9oYWxmd2lkdGggKiAoMSAtIGdhdXNzaWFuKGdhdXNNZWFuLCBnYXVzVmFyaWFuY2UpLnBkZih0cnVlUGl4ZWwuYm9yZGVyIC0gdHJ1ZVBpeGVsLmgpKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh0cnVlUGl4ZWwuYm9yZGVyKTtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh0cnVlUGl4ZWwuaCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVBpeGVsO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIG5ld0RhdGFIU0w7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHRlbXBsYXRlUm90YXRlKHRlbXBsYXRlX2Jhc2UsIGFuZ2xlKSB7XHJcbiAgICByZXR1cm4gdGVtcGxhdGVfYmFzZS5tYXAoKHZhbHVlKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgXCJiZWdcIjogdmFsdWUuYmVnICsgYW5nbGUsXHJcbiAgICAgICAgICAgIFwiZW5kXCI6IHZhbHVlLmVuZCArIGFuZ2xlXHJcbiAgICAgICAgfTtcclxuICAgIH0pXHJcbn1cclxuXHJcbndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBkcmF3KCk7XHJcblxyXG4gICAgZnVuY3Rpb24gZHJhdygpIHtcclxuICAgICAgICB2YXIgaW1nID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpbWdcIilbMF07XHJcbiAgICAgICAgaW1nLmNyb3NzT3JpZ2luID0gXCJBbm9ueW1vdXNcIjtcclxuICAgICAgICBpbWcuc2V0QXR0cmlidXRlKCdjcm9zc09yaWdpbicsICcnKVxyXG4gICAgICAgIC8vY29uc29sZS5sb2coaW1nKTtcclxuICAgICAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbnZhcycpO1xyXG4gICAgICAgIHZhciBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxuICAgICAgICBjYW52YXMud2lkdGggPSBpbWcud2lkdGg7XHJcbiAgICAgICAgY2FudmFzLmhlaWdodCA9IGltZy5oZWlnaHQ7XHJcbiAgICAgICAgY3R4LmRyYXdJbWFnZShpbWcsIDAsIDApO1xyXG4gICAgICAgIC8vaW1nLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblxyXG4gICAgICAgIHZhciBpbWFnZURhdGEgPSBjdHguZ2V0SW1hZ2VEYXRhKDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XHJcbiAgICAgICAgdmFyIGRhdGEgPSBpbWFnZURhdGEuZGF0YTtcclxuICAgICAgICB2YXIgdGVtcEhTTCwgdGVtcFJHQjtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKGRhdGEubGVuZ3RoKTtcclxuICAgICAgICB2YXIgZGF0YUhTTCA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkgKz0gNCkge1xyXG4gICAgICAgICAgICBkYXRhSFNMLnB1c2goY29sb3JzeXMucmdiX3RvX2hzbCh7XHJcbiAgICAgICAgICAgICAgICByOiBkYXRhW2ldLFxyXG4gICAgICAgICAgICAgICAgZzogZGF0YVtpICsgMV0sXHJcbiAgICAgICAgICAgICAgICBiOiBkYXRhW2kgKyAyXVxyXG4gICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIHRlbXBsYXRlID0gdGVtcGxhdGVfYmFzZTE7XHJcbiAgICAgICAgdmFyIG1pblN1bURpc3RhbmNlID0gSW5maW5pdHk7XHJcbiAgICAgICAgdmFyIGJlc3RBbmdsZSA9IDA7XHJcbiAgICAgICAgLy/Qv9C10YDQtdCx0LjRgNCw0LXQvCDQstC+0LfQvNC+0LbQvdGL0LUg0YPQs9C70Ysg0L/QvtCy0L7RgNC+0YLQsCDRiNCw0LHQu9C+0L3QsFxyXG4gICAgICAgIGZvciAodmFyIGFuZ2xlID0gMDsgYW5nbGUgPD0gMzYwOyBhbmdsZSArPSBhbmdsZVN0ZXApIHtcclxuICAgICAgICAgICAgLy/Qv9C+0LLQvtGA0LDRh9C40LLQsNC10Lwg0YjQsNCx0LvQvtC9XHJcbiAgICAgICAgICAgIC8vIHRlbXBsYXRlID0gdGVtcGxhdGUxLm1hcCgodmFsdWUpID0+IHtcclxuICAgICAgICAgICAgLy8gICAgIHJldHVybiB7XCJiZWdcIjogdmFsdWUuYmVnK2FuZ2xlLCBcImVuZFwiOiB2YWx1ZS5lbmQrYW5nbGV9O1xyXG4gICAgICAgICAgICAvLyB9KVxyXG5cclxuICAgICAgICAgICAgdGVtcGxhdGUgPSB0ZW1wbGF0ZVJvdGF0ZSh0ZW1wbGF0ZV9iYXNlMSwgYW5nbGUpO1xyXG4gICAgICAgICAgICAvL9GB0YfQuNGC0LDQtdC8INGB0YPQvNC80YMg0YDQsNGB0YLQvtGP0L3QuNC5INC/0LjQutGB0LvQtdC5INC00L4g0LHQu9C40LbQsNC50YnQtdC5INCz0YDQsNC90LjRhtGLINC90L7QstC+0LPQviDRiNCw0LHQu9C+0L3QsFxyXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKGRhdGFIU0xbMF0pO1xyXG5cclxuXHJcbiAgICAgICAgICAgIHZhciBzdW0gPSBkYXRhSFNMLnJlZHVjZSgoc3VtLCBwaXhlbCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhzdW0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHN1bSArIG1pbkJvcmRlckRpc3RhbmNlKHBpeGVsLCB0ZW1wbGF0ZSkuZGlzdGFuY2U7XHJcbiAgICAgICAgICAgIH0sIDApO1xyXG4gICAgICAgICAgICAvLyBkYXRhSFNMLmZvckVhY2goKHBpeGVsKSA9PiB7XHJcbiAgICAgICAgICAgIC8vICAgICAvL2NvbnNvbGUubG9nKHN1bSk7XHJcbiAgICAgICAgICAgIC8vICAgICBjb25zb2xlLmxvZyhtaW5Cb3JkZXJEaXN0YW5jZShwaXhlbCwgdGVtcGxhdGUpKTtcclxuICAgICAgICAgICAgLy8gfSk7XHJcblxyXG4gICAgICAgICAgICAvL9C10YHQu9C4INGB0YPQvNC80LAg0YHRgtCw0LvQsCDQvNC10L3RjNGI0LUsINGH0LXQvCDQtNC70Y8g0L/RgNC10LTRi9C00YPRidC40YUg0YjQsNCx0LvQvtC90L7QsiAtINC30LDQv9C+0LzQuNC90LDQtdC8INGN0YLQvtGCINGI0LDQsdC70L7QvVxyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIm1pblN1bURpc3RhbmNlOiBcIiArIG1pblN1bURpc3RhbmNlKTtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJzdW06IFwiICsgc3VtKTtcclxuICAgICAgICAgICAgaWYgKG1pblN1bURpc3RhbmNlID4gc3VtKSB7XHJcbiAgICAgICAgICAgICAgICBiZXN0QW5nbGUgPSBhbmdsZTtcclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coYW5nbGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG1pblN1bURpc3RhbmNlID0gTWF0aC5taW4obWluU3VtRGlzdGFuY2UsIHN1bSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvL9C/0L7Qu9GD0YfQtdC8INGB0LXQutGG0LjQuCDQuNC00LXQsNC70YzQvdC+0LPQviDRiNCw0LHQu9C+0L3QsFxyXG4gICAgICAgIC8vIHRlbXBsYXRlID0gdGVtcGxhdGUxLm1hcCgodmFsdWUpID0+IHtcclxuICAgICAgICAvLyAgICAgcmV0dXJuIHtcImJlZ1wiOiB2YWx1ZS5iZWcrYmVzdEFuZ2xlLCBcImVuZFwiOiB2YWx1ZS5lbmQrYmVzdEFuZ2xlfTtcclxuICAgICAgICAvLyB9KVxyXG4gICAgICAgIHRlbXBsYXRlID0gdGVtcGxhdGVSb3RhdGUodGVtcGxhdGVfYmFzZTEsIGFuZ2xlKTtcclxuXHJcbiAgICAgICAgLy/Qv9C+0LvRg9GH0LDQtdC8INCx0LvQuNC20LDQudGJ0LjQtSDQs9GA0LDQvdC40YbRiyDQtNC70Y8g0L/QuNC60YHQtdC70LXQuVxyXG4gICAgICAgIGRhdGFIU0wgPSBkYXRhSFNMLm1hcCgocGl4ZWwpID0+IHtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhtaW5Cb3JkZXJEaXN0YW5jZShwaXhlbCwgdGVtcGxhdGUpLmRpc3RhbmNlKTtcclxuICAgICAgICAgICAgdmFyIGRhdGEgPSBtaW5Cb3JkZXJEaXN0YW5jZShwaXhlbCwgdGVtcGxhdGUpO1xyXG4gICAgICAgICAgICBwaXhlbC5kaXN0YW5jZSA9IGRhdGEuZGlzdGFuY2U7XHJcbiAgICAgICAgICAgIHBpeGVsLmJvcmRlciA9IGRhdGEuYm9yZGVyO1xyXG4gICAgICAgICAgICByZXR1cm4gcGl4ZWw7XHJcbiAgICAgICAgfSwgMCk7XHJcblxyXG4gICAgICAgIC8vIGRhdGFIU0wuZm9yRWFjaCgoaSkgPT4ge1xyXG4gICAgICAgIC8vICAgICBjb25zb2xlLmxvZyhpLmgpO1xyXG4gICAgICAgIC8vIH0pO1xyXG5cclxuICAgICAgICBjb25zb2xlLmxvZyhiZXN0QW5nbGUpO1xyXG4gICAgICAgIC8vY29uc29sZS5sb2cobWluQm9yZGVyRGlzdGFuY2UoeyBcImhcIjogNTB9LCB0ZW1wbGF0ZTEpKTtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKGdhdXNzaWFuKGdhdXNNZWFuLCBnYXVzVmFyaWFuY2UpLnBkZigwKSk7XHJcbiAgICAgICAgdmFyIG5ld2RhdGFIU0wgPSBnZXROZXdkYXRhSFNMKGRhdGFIU0wpO1xyXG5cclxuICAgICAgICAvLyBuZXdkYXRhSFNMLmZvckVhY2goKGkpID0+IHtcclxuICAgICAgICAvLyAgICAgY29uc29sZS5sb2coaS5oKTtcclxuICAgICAgICAvLyB9KTtcclxuXHJcbiAgICAgICAgdmFyIGFwcGx5Q29sb3IgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkgKz0gNCkge1xyXG4gICAgICAgICAgICAgICAgdGVtcFJHQiA9IGNvbG9yc3lzLmhzbFRvUmdiKHtcclxuICAgICAgICAgICAgICAgICAgICBcImhcIjogbmV3ZGF0YUhTTFtpXS5oLFxyXG4gICAgICAgICAgICAgICAgICAgIFwic1wiOiBuZXdkYXRhSFNMW2kgKyAxXS5zLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibFwiOiBuZXdkYXRhSFNMW2kgKyAyXS5sXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coY29sb3JzeXMucm90YXRlSHVlKDIwMCwgMjAwKSk7XHJcbiAgICAgICAgICAgICAgICBkYXRhW2ldID0gdGVtcFJHQi5yIC8vZGF0YVtpXTsgICAgIC8vIHJlZFxyXG4gICAgICAgICAgICAgICAgZGF0YVtpICsgMV0gPSB0ZW1wUkdCLmcgLy9kYXRhW2kgKyAxXTsgLy8gZ3JlZW5cclxuICAgICAgICAgICAgICAgIGRhdGFbaSArIDJdID0gdGVtcFJHQi5iIC8vZGF0YVtpICsgMl07IC8vIGJsdWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL2ltZy5zdHlsZS5kaXNwbGF5ID0gJyc7XHJcbiAgICAgICAgICAgIGN0eC5wdXRJbWFnZURhdGEoaW1hZ2VEYXRhLCAwLCAwKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciBpbnZlcnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkgKz0gNCkge1xyXG4gICAgICAgICAgICAgICAgdGVtcEhTTCA9IGNvbG9yc3lzLnJnYl90b19oc2woe1xyXG4gICAgICAgICAgICAgICAgICAgIHI6IGRhdGFbaV0sXHJcbiAgICAgICAgICAgICAgICAgICAgZzogZGF0YVtpICsgMV0sXHJcbiAgICAgICAgICAgICAgICAgICAgYjogZGF0YVtpICsgMl1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh0ZW1wSFNMKTtcclxuICAgICAgICAgICAgICAgIHRlbXBSR0IgPSBjb2xvcnN5cy5oc2xUb1JnYih7XHJcbiAgICAgICAgICAgICAgICAgICAgaDogdGVtcEhTTC5oLFxyXG4gICAgICAgICAgICAgICAgICAgIHM6IHRlbXBIU0wucyxcclxuICAgICAgICAgICAgICAgICAgICBsOiB0ZW1wSFNMLmxcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhjb2xvcnN5cy5yb3RhdGVIdWUoMjAwLCAyMDApKTtcclxuICAgICAgICAgICAgICAgIGRhdGFbaV0gPSAyNTYgLSB0ZW1wUkdCLnIgLy9kYXRhW2ldOyAgICAgLy8gcmVkXHJcbiAgICAgICAgICAgICAgICBkYXRhW2kgKyAxXSA9IDI1NiAtIHRlbXBSR0IuZyAvL2RhdGFbaSArIDFdOyAvLyBncmVlblxyXG4gICAgICAgICAgICAgICAgZGF0YVtpICsgMl0gPSAyNTYgLSB0ZW1wUkdCLmIgLy9kYXRhW2kgKyAyXTsgLy8gYmx1ZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vaW1nLnN0eWxlLmRpc3BsYXkgPSAnJztcclxuICAgICAgICAgICAgY3R4LnB1dEltYWdlRGF0YShpbWFnZURhdGEsIDAsIDApO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgYXBwbHlDb2xvcigpO1xyXG4gICAgICAgIC8vaW52ZXJ0KCk7IFxyXG4gICAgfVxyXG59IiwiKGZ1bmN0aW9uKGV4cG9ydHMpIHtcblxuICAvLyBDb21wbGVtZW50YXJ5IGVycm9yIGZ1bmN0aW9uXG4gIC8vIEZyb20gTnVtZXJpY2FsIFJlY2lwZXMgaW4gQyAyZSBwMjIxXG4gIHZhciBlcmZjID0gZnVuY3Rpb24oeCkge1xuICAgIHZhciB6ID0gTWF0aC5hYnMoeCk7XG4gICAgdmFyIHQgPSAxIC8gKDEgKyB6IC8gMik7XG4gICAgdmFyIHIgPSB0ICogTWF0aC5leHAoLXogKiB6IC0gMS4yNjU1MTIyMyArIHQgKiAoMS4wMDAwMjM2OCArXG4gICAgICAgICAgICB0ICogKDAuMzc0MDkxOTYgKyB0ICogKDAuMDk2Nzg0MTggKyB0ICogKC0wLjE4NjI4ODA2ICtcbiAgICAgICAgICAgIHQgKiAoMC4yNzg4NjgwNyArIHQgKiAoLTEuMTM1MjAzOTggKyB0ICogKDEuNDg4NTE1ODcgK1xuICAgICAgICAgICAgdCAqICgtMC44MjIxNTIyMyArIHQgKiAwLjE3MDg3Mjc3KSkpKSkpKSkpXG4gICAgcmV0dXJuIHggPj0gMCA/IHIgOiAyIC0gcjtcbiAgfTtcblxuICAvLyBJbnZlcnNlIGNvbXBsZW1lbnRhcnkgZXJyb3IgZnVuY3Rpb25cbiAgLy8gRnJvbSBOdW1lcmljYWwgUmVjaXBlcyAzZSBwMjY1XG4gIHZhciBpZXJmYyA9IGZ1bmN0aW9uKHgpIHtcbiAgICBpZiAoeCA+PSAyKSB7IHJldHVybiAtMTAwOyB9XG4gICAgaWYgKHggPD0gMCkgeyByZXR1cm4gMTAwOyB9XG5cbiAgICB2YXIgeHggPSAoeCA8IDEpID8geCA6IDIgLSB4O1xuICAgIHZhciB0ID0gTWF0aC5zcXJ0KC0yICogTWF0aC5sb2coeHggLyAyKSk7XG5cbiAgICB2YXIgciA9IC0wLjcwNzExICogKCgyLjMwNzUzICsgdCAqIDAuMjcwNjEpIC9cbiAgICAgICAgICAgICgxICsgdCAqICgwLjk5MjI5ICsgdCAqIDAuMDQ0ODEpKSAtIHQpO1xuXG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCAyOyBqKyspIHtcbiAgICAgIHZhciBlcnIgPSBlcmZjKHIpIC0geHg7XG4gICAgICByICs9IGVyciAvICgxLjEyODM3OTE2NzA5NTUxMjU3ICogTWF0aC5leHAoLShyICogcikpIC0gciAqIGVycik7XG4gICAgfVxuXG4gICAgcmV0dXJuICh4IDwgMSkgPyByIDogLXI7XG4gIH07XG5cbiAgLy8gTW9kZWxzIHRoZSBub3JtYWwgZGlzdHJpYnV0aW9uXG4gIHZhciBHYXVzc2lhbiA9IGZ1bmN0aW9uKG1lYW4sIHZhcmlhbmNlKSB7XG4gICAgaWYgKHZhcmlhbmNlIDw9IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVmFyaWFuY2UgbXVzdCBiZSA+IDAgKGJ1dCB3YXMgJyArIHZhcmlhbmNlICsgJyknKTtcbiAgICB9XG4gICAgdGhpcy5tZWFuID0gbWVhbjtcbiAgICB0aGlzLnZhcmlhbmNlID0gdmFyaWFuY2U7XG4gICAgdGhpcy5zdGFuZGFyZERldmlhdGlvbiA9IE1hdGguc3FydCh2YXJpYW5jZSk7XG4gIH1cblxuICAvLyBQcm9iYWJpbGl0eSBkZW5zaXR5IGZ1bmN0aW9uXG4gIEdhdXNzaWFuLnByb3RvdHlwZS5wZGYgPSBmdW5jdGlvbih4KSB7XG4gICAgdmFyIG0gPSB0aGlzLnN0YW5kYXJkRGV2aWF0aW9uICogTWF0aC5zcXJ0KDIgKiBNYXRoLlBJKTtcbiAgICB2YXIgZSA9IE1hdGguZXhwKC1NYXRoLnBvdyh4IC0gdGhpcy5tZWFuLCAyKSAvICgyICogdGhpcy52YXJpYW5jZSkpO1xuICAgIHJldHVybiBlIC8gbTtcbiAgfTtcblxuICAvLyBDdW11bGF0aXZlIGRlbnNpdHkgZnVuY3Rpb25cbiAgR2F1c3NpYW4ucHJvdG90eXBlLmNkZiA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gMC41ICogZXJmYygtKHggLSB0aGlzLm1lYW4pIC8gKHRoaXMuc3RhbmRhcmREZXZpYXRpb24gKiBNYXRoLnNxcnQoMikpKTtcbiAgfTtcblxuICAvLyBQZXJjZW50IHBvaW50IGZ1bmN0aW9uXG4gIEdhdXNzaWFuLnByb3RvdHlwZS5wcGYgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIHRoaXMubWVhbiAtIHRoaXMuc3RhbmRhcmREZXZpYXRpb24gKiBNYXRoLnNxcnQoMikgKiBpZXJmYygyICogeCk7XG4gIH07XG5cbiAgLy8gUHJvZHVjdCBkaXN0cmlidXRpb24gb2YgdGhpcyBhbmQgZCAoc2NhbGUgZm9yIGNvbnN0YW50KVxuICBHYXVzc2lhbi5wcm90b3R5cGUubXVsID0gZnVuY3Rpb24oZCkge1xuICAgIGlmICh0eXBlb2YoZCkgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgIHJldHVybiB0aGlzLnNjYWxlKGQpO1xuICAgIH1cbiAgICB2YXIgcHJlY2lzaW9uID0gMSAvIHRoaXMudmFyaWFuY2U7XG4gICAgdmFyIGRwcmVjaXNpb24gPSAxIC8gZC52YXJpYW5jZTtcbiAgICByZXR1cm4gZnJvbVByZWNpc2lvbk1lYW4oXG4gICAgICAgIHByZWNpc2lvbiArIGRwcmVjaXNpb24sIFxuICAgICAgICBwcmVjaXNpb24gKiB0aGlzLm1lYW4gKyBkcHJlY2lzaW9uICogZC5tZWFuKTtcbiAgfTtcblxuICAvLyBRdW90aWVudCBkaXN0cmlidXRpb24gb2YgdGhpcyBhbmQgZCAoc2NhbGUgZm9yIGNvbnN0YW50KVxuICBHYXVzc2lhbi5wcm90b3R5cGUuZGl2ID0gZnVuY3Rpb24oZCkge1xuICAgIGlmICh0eXBlb2YoZCkgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgIHJldHVybiB0aGlzLnNjYWxlKDEgLyBkKTtcbiAgICB9XG4gICAgdmFyIHByZWNpc2lvbiA9IDEgLyB0aGlzLnZhcmlhbmNlO1xuICAgIHZhciBkcHJlY2lzaW9uID0gMSAvIGQudmFyaWFuY2U7XG4gICAgcmV0dXJuIGZyb21QcmVjaXNpb25NZWFuKFxuICAgICAgICBwcmVjaXNpb24gLSBkcHJlY2lzaW9uLCBcbiAgICAgICAgcHJlY2lzaW9uICogdGhpcy5tZWFuIC0gZHByZWNpc2lvbiAqIGQubWVhbik7XG4gIH07XG5cbiAgLy8gQWRkaXRpb24gb2YgdGhpcyBhbmQgZFxuICBHYXVzc2lhbi5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBnYXVzc2lhbih0aGlzLm1lYW4gKyBkLm1lYW4sIHRoaXMudmFyaWFuY2UgKyBkLnZhcmlhbmNlKTtcbiAgfTtcblxuICAvLyBTdWJ0cmFjdGlvbiBvZiB0aGlzIGFuZCBkXG4gIEdhdXNzaWFuLnByb3RvdHlwZS5zdWIgPSBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGdhdXNzaWFuKHRoaXMubWVhbiAtIGQubWVhbiwgdGhpcy52YXJpYW5jZSArIGQudmFyaWFuY2UpO1xuICB9O1xuXG4gIC8vIFNjYWxlIHRoaXMgYnkgY29uc3RhbnQgY1xuICBHYXVzc2lhbi5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbihjKSB7XG4gICAgcmV0dXJuIGdhdXNzaWFuKHRoaXMubWVhbiAqIGMsIHRoaXMudmFyaWFuY2UgKiBjICogYyk7XG4gIH07XG5cbiAgdmFyIGdhdXNzaWFuID0gZnVuY3Rpb24obWVhbiwgdmFyaWFuY2UpIHtcbiAgICByZXR1cm4gbmV3IEdhdXNzaWFuKG1lYW4sIHZhcmlhbmNlKTtcbiAgfTtcblxuICB2YXIgZnJvbVByZWNpc2lvbk1lYW4gPSBmdW5jdGlvbihwcmVjaXNpb24sIHByZWNpc2lvbm1lYW4pIHtcbiAgICByZXR1cm4gZ2F1c3NpYW4ocHJlY2lzaW9ubWVhbiAvIHByZWNpc2lvbiwgMSAvIHByZWNpc2lvbik7XG4gIH07XG5cbiAgZXhwb3J0cyhnYXVzc2lhbik7XG59KVxuKHR5cGVvZihleHBvcnRzKSAhPT0gXCJ1bmRlZmluZWRcIlxuICAgID8gZnVuY3Rpb24oZSkgeyBtb2R1bGUuZXhwb3J0cyA9IGU7IH1cbiAgICA6IGZ1bmN0aW9uKGUpIHsgdGhpc1tcImdhdXNzaWFuXCJdID0gZTsgfSk7XG4iXSwic291cmNlUm9vdCI6IiJ9